#! /usr/bin/python

import socket

def create_receive_socket():
    #Creates a socket to receive raw packets on the specified interface.
    s_receive = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(0x0800))
    s_receive.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    #s_receive.bind((interface, 0))
    return s_receive
    
    while True:
        try:
            bits = s_receive.recvfrom(65535)[0]
            frame = Ethernet(bits[0:14])
            packet = IPV4(bits[0:14])
            protocol = packet.PROTOCOL

            if protocol == 1:
                #Creates a socket to send raw TCP packets.
                send_tcp = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)
                send_tcp.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
                send_tcp.setsockopt(socket.IPPROTO_IP, socket.IP_HDRINCL, 1)
                return send_tcp

            elif protocol == 6:
                #Creates a socket to send raw ICMP packets.
                send_icmp = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_ICMP)
                send_icmp.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
                send_icmp.setsockopt(socket.IPPROTO_IP, socket.IP_HDRINCL, 1)
                return send_icmpi
            
            else:
                #Creates a socket to send raw UDP packets.
                send_udp = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_UDP)
                send_udp.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
                send_udp.setsockopt(socket.IPPROTO_IP, socket.IP_HDRINCL, 1)
                return send_udp
